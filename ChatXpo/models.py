from django.db import models
from django.utils.timezone import now
from uuid import uuid4
from Authentication.models import User
# Create your models here.


class XpoChat(models.Model):
    uuid = models.UUIDField(default=uuid4, unique=True, editable=False)
    user = models.ForeignKey(User, on_delete=models.PROTECT, default=None, null=True, related_name='xpo_chats')

    title = models.CharField(default='', max_length=999)


    is_active = models.BooleanField(default=True)
    is_deleted = models.BooleanField(default=False)
    is_blocked = models.BooleanField(default=False)
    created_at = models.DateTimeField(auto_now=now)
    updated_at = models.DateTimeField(auto_now=now)

    def __str__(self):
        return str(self.uuid)


class ChatMessage(models.Model):
    MESSAGE_TYPES = (
        ('Message', 'Message'),
        ('Notifier', 'Notifier'),
    )

    AI_MESSAGE_TYPE = (
        ('user', 'user'),
        ('assistant', 'assistant'),
        ('system', 'system'),
    )
    uuid = models.UUIDField(default=uuid4, unique=True, editable=False)
    chat = models.ForeignKey(XpoChat, on_delete=models.PROTECT, related_name='chat_messages')

    user_query = models.TextField(default='', verbose_name='User Question to AI')

    content = models.TextField(default='', verbose_name='Whole content (Which is generated by Outer Source)')
    display_content = models.TextField(default='', verbose_name='Content (Which will be displayed on Client Side)')
    extracted_info = models.TextField(default='', verbose_name='Extracted Information (Which is generated by Outer Source)')

    user_output_urdu = models.TextField(default='')

    message_type = models.CharField(choices=MESSAGE_TYPES, default='Message', max_length=50)
    role = models.CharField(choices=AI_MESSAGE_TYPE, default='user', max_length=50)

    is_active = models.BooleanField(default=True)
    is_deleted = models.BooleanField(default=False)
    is_blocked = models.BooleanField(default=False)
    created_at = models.DateTimeField(auto_now=now)
    updated_at = models.DateTimeField(auto_now=now)

    @property
    def formated_content(self):
        return self.content.replace('\n', '<br>')

    def __str__(self):
        return str(self.uuid)